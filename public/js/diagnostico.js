// Sistema de diagn√≥stico para Alenia Website
// Este script te ayudar√° a identificar problemas espec√≠ficos con tu sitio web

(function() {
  console.log('üîç Sistema de diagn√≥stico Alenia iniciado');
  
  // Informaci√≥n general del sistema
  console.log('üìä Informaci√≥n del navegador:', navigator.userAgent);
  console.log('üîÑ Estado de la p√°gina:', document.readyState);
  
  // Comprobar React
  function checkReact() {
    console.log('‚öõÔ∏è Comprobando React...');
    if (window.React) {
      console.log('‚úÖ React est√° disponible en window.React');
    } else {
      console.log('‚ùå React no est√° disponible como objeto global');
    }
    
    const rootElement = document.getElementById('root');
    console.log('üå± Estado del elemento root:', rootElement ? 
      `Encontrado, contiene ${rootElement.children.length} elementos hijos` : 
      'No encontrado');
    
    // Intenta verificar si React est√° funcionando buscando elementos React Fiber
    try {
      const possibleReactElement = document.querySelector('[data-reactroot]');
      if (possibleReactElement) {
        console.log('‚úÖ Elementos React detectados en el DOM');
      } else {
        console.log('‚ùå No se detectaron elementos React en el DOM');
      }
    } catch (e) {
      console.log('‚ùå Error al buscar elementos React:', e);
    }
  }
  
  // Comprobar CSS
  function checkCSS() {
    console.log('üé® Comprobando CSS...');
    const styleSheets = document.styleSheets;
    console.log(`üìë Hojas de estilo cargadas: ${styleSheets.length}`);
    
    // Intentar acceder a las hojas de estilo para ver si hay errores CORS
    try {
      for (let i = 0; i < styleSheets.length; i++) {
        const sheet = styleSheets[i];
        try {
          const rules = sheet.cssRules || sheet.rules;
          console.log(`‚úÖ Hoja de estilo ${i + 1}: ${sheet.href || 'inline'} - ${rules.length} reglas`);
        } catch (e) {
          if (e.name === 'SecurityError') {
            console.log(`‚ùå CORS Error en hoja de estilo ${i + 1}: ${sheet.href} - Posible problema de CORS`);
          } else {
            console.log(`‚ùå Error en hoja de estilo ${i + 1}: ${sheet.href} - ${e.message}`);
          }
        }
      }
    } catch (e) {
      console.log('‚ùå Error general al analizar hojas de estilo:', e);
    }
  }
  
  // Comprobar recursos cargados
  function checkResources() {
    console.log('üîó Comprobando recursos cargados...');
    
    // Scripts
    const scripts = document.scripts;
    console.log(`üìú Scripts cargados: ${scripts.length}`);
    
    // Intentar identificar si el script principal de React se ha cargado
    let reactScriptFound = false;
    for (let i = 0; i < scripts.length; i++) {
      const script = scripts[i];
      if (script.src && (script.src.includes('react') || script.src.includes('main.') || script.src.includes('bundle.'))) {
        console.log(`‚úÖ Script relevante: ${script.src}`);
        reactScriptFound = true;
      }
    }
    
    if (!reactScriptFound) {
      console.log('‚ùå No se detectaron scripts principales de React/bundle');
    }
    
    // Comprobar si hay errores 404 o recursos que no se cargaron
    if (window.performance) {
      const resources = window.performance.getEntriesByType('resource');
      let failedResources = 0;
      
      resources.forEach(resource => {
        // Aqu√≠ no podemos detectar errores HTTP directamente con Performance API
        // pero podemos verificar los tiempos de transferencia
        if (resource.transferSize === 0 && resource.decodedBodySize === 0 && !resource.name.includes('data:')) {
          console.log(`‚ö†Ô∏è Posible recurso fallido: ${resource.name}`);
          failedResources++;
        }
      });
      
      console.log(`üî¢ Recursos totales cargados: ${resources.length}, posiblemente fallidos: ${failedResources}`);
    }
  }
  
  // Ejecutar diagn√≥stico completo cuando la p√°gina termine de cargar
  window.addEventListener('load', function() {
    console.log('üöÄ P√°gina cargada completamente, ejecutando diagn√≥stico completo...');
    
    // Esperar un momento para que React tenga tiempo de inicializarse
    setTimeout(() => {
      checkReact();
      checkCSS();
      checkResources();
      
      console.log('üèÅ Diagn√≥stico completado');
    }, 1000);
  });
  
  // Tambi√©n ejecutar un diagn√≥stico parcial de inmediato
  checkReact();
  checkCSS();
  
  // A√±adir funciones al objeto global para diagn√≥stico manual
  window.aleniaDiagnostics = {
    checkReact,
    checkCSS,
    checkResources,
    runAll: function() {
      checkReact();
      checkCSS();
      checkResources();
    }
  };
  
  console.log('üõ†Ô∏è Diagn√≥stico inicial completado. Puedes ejecutar diagn√≥sticos adicionales con window.aleniaDiagnostics');
})();
